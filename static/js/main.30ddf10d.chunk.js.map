{"version":3,"sources":["assets/logo.png","assets/villagers6.jpg","assets/isabelle.png","species.js","SpeciesList.js","personality.js","PersonalitiesList.js","zodiac.js","ZodiacList.js","Form.js","Instructions.js","RelevantVillagers.js","ShowInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","villagerSpecies","type","SpeciesList","disabled","value","map","species","index","key","Component","villagerPersonality","PersonalitiesList","personality","villagerZodiac","ZodiacList","sign","Form","handleRadioChange","event","setState","userRadioSelection","target","handleChange","userSelection","state","this","onChange","className","name","id","htmlFor","onClick","props","filterVillagers","Instructions","src","villagers","alt","isabelle","RelevantVillagers","showInfo","icon","ShowInfo","birthday","catchphrase","zodiacSign","App","preventDefault","relVillagers","filter","villager","hideInfo","showInstructions","newEvent","clickedVillager","goBack","window","location","reload","axios","url","method","responseType","then","response","data","newState","zodiacMonth","substring","zodiacDay","parseInt","push","birthdayNumber","image","zodiacState","href","logo","role","aria-label","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30ddf10d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.435f9ace.png\";","module.exports = __webpack_public_path__ + \"static/media/villagers6.fcc2dd76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/isabelle.e81857d6.png\";","const villagerSpecies = [\n    { type: 'Alligator' },\n    { type: 'Anteater' },\n    { type: 'Bird' },\n    { type: 'Bear' },\n    { type: 'Bull'},\n    { type: 'Cat' },\n    { type: 'Chicken' },\n    { type: 'Cow' },\n    { type: 'Cub' },\n    { type: 'Deer' },\n    { type: 'Dog' },\n    { type: 'Duck' },\n    { type: 'Eagle' },\n    { type: 'Elephant' },\n    { type: 'Frog' },\n    { type: 'Goat' },\n    { type: 'Gorilla'},\n    { type: 'Hamster' },\n    { type: 'Hippo' },\n    { type: 'Horse' },\n    { type: 'Koala' },\n    { type: 'Kangaroo' },\n    { type: 'Lion' },\n    { type: 'Monkey' },\n    { type: 'Mouse' },\n    { type: 'Octopus' },\n    { type: 'Ostrich'},\n    { type: 'Penguin' },\n    { type: 'Pig' },\n    { type: 'Rabbit' },\n    { type: 'Rhino' },\n    { type: 'Sheep' },\n    { type: 'Squirrel' },\n    { type: 'Tiger' },\n    { type: 'Wolf' }\n]\n\nexport default villagerSpecies;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport villagerSpecies from './species';\n\nclass SpeciesList extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                <option disabled value=\"\">Options</option>\n                {\n                    // map through the array of villager species to return options for the user to select when filtering\n                    villagerSpecies.map((species, index) => {\n                        return (\n                            <option key={index} value={species.type}>{species.type}</option>\n                        )\n                    })\n                }\n            </Fragment>\n        );\n    }\n}\n\nexport default SpeciesList;\n","const villagerPersonality = [\n    {type: 'Normal'},\n    {type: 'Peppy'},\n    {type: 'Snooty'},\n    {type: 'Uchi'},\n    {type: 'Lazy'},\n    {type: 'Smug'},\n    {type: 'Cranky'},\n    {type: 'Jock'}\n]\n\nexport default villagerPersonality;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport villagerPersonality from './personality';\n\nclass PersonalitiesList extends Component {\n    render() {\n        return (\n            <Fragment>\n                <option disabled value=\"\">Options</option>\n                {\n                    // map through the array of villager personalities to return options for the user to select when filtering\n                    villagerPersonality.map((personality, index) => {\n                        return (\n                            <option key={index} value={personality.type}>{personality.type}</option>\n                        )\n                    })\n                }\n            </Fragment>\n        );\n    }\n}\n\nexport default PersonalitiesList;","const villagerZodiac = [\n    { type: 'Aries' },\n    { type: 'Taurus' },\n    { type: 'Gemini' },\n    { type: 'Cancer' },\n    { type: 'Leo' },\n    { type: 'Virgo' },\n    { type: 'Libra' },\n    { type: 'Scorpio' },\n    { type: 'Sagittarius' },\n    { type: 'Capricorn' },\n    { type: 'Aquarius' },\n    { type: 'Pisces' },\n]\nexport default villagerZodiac;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport villagerZodiac from './zodiac';\n\nclass ZodiacList extends Component {\n    render() {\n        return (\n            <Fragment>\n                <option disabled value=\"\">Options</option>\n                {\n                    // map through the array of zodiac signs to return options for the user to select when filtering\n                    villagerZodiac.map((sign, index) => {\n                        return (\n                            <option key={index} value={sign.type}>{sign.type}</option>\n                        )\n                    })\n                }\n            </Fragment>\n        );\n    }\n}\n\nexport default ZodiacList;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport SpeciesList from './SpeciesList';\nimport PersonalitiesList from './PersonalitiesList';    \nimport ZodiacList from './ZodiacList.js';\n\nclass Form extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userSelection: '',\n            userRadioSelection: ''\n        }\n    }\n\n    handleRadioChange = (event) => {\n        this.setState({\n            userRadioSelection: event.target.value,\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            userSelection: event.target.value,\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <form>\n                    <fieldset value={this.state.userRadioSelection} onChange={this.handleRadioChange}>\n                        <input className=\"sr-only\" type=\"radio\" name=\"searchType\" id='speciesRadio' value='Species'></input>\n                        <label htmlFor='speciesRadio'>Species</label>\n                        <input className=\"sr-only\" type=\"radio\" name=\"searchType\" id='personalityRadio' value='Personality'></input>\n                        <label htmlFor='personalityRadio'>Personality</label>   \n                        <input className=\"sr-only\" type=\"radio\" name=\"searchType\" id='zodiacRadio' value='Zodiac'></input>\n                        <label htmlFor='zodiacRadio'>Zodiac</label> \n                    </fieldset>\n                </form>\n                <form>\n                    <div className=\"selectBox\">\n                        <label htmlFor=\"userSelection\" className=\"sr-only\">Options</label>\n                        <select id=\"userSelection\" value={this.state.userSelection} onChange={this.handleChange}>\n                            {this.state.userRadioSelection === 'Personality' ? (<PersonalitiesList />) : \n                            this.state.userRadioSelection === 'Zodiac' ? (<ZodiacList />) :\n                            (<SpeciesList />)}\n                        </select>\n                    </div>\n                    <button className=\"display\" onClick={(event) => this.props.filterVillagers(event, this.state.userSelection)}>Display</button>\n                </form>\n            </Fragment>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport villagers from './assets/villagers6.jpg';\nimport isabelle from './assets/isabelle.png';\n\nclass Instructions extends Component {\n\n    render() {\n        return (\n            <div className=\"instructions\">\n                <img className=\"mobileImage\" src={villagers} alt=\"A group of Animal Crossing:New Horizons villagers celebrating in front of a museum.\"></img>\n                <img className=\"desktopImage\" src={isabelle} alt=\"An image of Isabelle, a yellow dog character\"></img>\n                <div className=\"instructionsTextBox\">\n                    <h2>Instructions</h2>\n                    <p>Choose what type of search you would like to perform (Species, Personality, or Zodiac).</p>\n                    <p>Then, choose an option from the dropdown menu.</p>\n                    <p>Click the \"DISPLAY\" button to view names and icons for all associated villagers.</p>\n                    <p>You can click on a villager's icon to view their full photo and more information about them.</p>\n                    <p>You can click the logo at the top of the page to come back to these instructions.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Instructions;","import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nclass RelevantVillagers extends Component {\n    render() {\n        return (\n            // show a list of villagers and their icons based on the selected user value for filtering once the user clicks submit\n            <Fragment>\n                <li className=\"relVillagerItem\">\n                    <ul>\n                        <li><button className=\"villagerButton\" key={this.props.id} onClick={(event) => this.props.showInfo(event, this.props.id)}>\n                            <img src={this.props.icon} alt={this.props.name}></img>\n                        </button></li>\n                        <li><p className=\"listItemName\">{this.props.name}</p></li>\n                    </ul>\n                </li>\n            </Fragment>\n        );\n    }   \n}\n\nexport default RelevantVillagers;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nclass ShowInfo extends Component {\n    render() {\n        return (\n            // display relevant information for a specific villager based on the villager (and their id) that was clicked\n            <Fragment key={this.props.id}>\n                <li><img src={this.props.icon} alt={this.props.name}></img></li>\n                <li>\n                    <ul className=\"showInfoTextBox\">\n                        <li><p className=\"villagerName\">{this.props.name}</p></li>\n                        <li><p className=\"villagerBday\">Birthday: {this.props.birthday}</p></li>\n                        <li><p>Species: {this.props.species}</p></li>\n                        <li><p>Catchphrase: \"{this.props.catchphrase}\"</p></li>\n                        <li><p>Personality: {this.props.personality}</p></li>  \n                        <li><p>Zodiac Sign: {this.props.zodiacSign}</p></li>  \n                    </ul>\n                </li>\n            </Fragment>\n        );\n    }\n}\n\n\nexport default ShowInfo;\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport logo from './assets/logo.png';\nimport Form from './Form';\nimport Instructions from './Instructions';\nimport RelevantVillagers from './RelevantVillagers';\nimport ShowInfo from './ShowInfo';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      villagers: [],\n      relVillagers: [],\n      clickedVillager: [],\n      hideInfo: true,\n      showInstructions: true,\n    }\n  }\n\n  componentDidMount() {\n    // pull villager data from API\n    axios({\n      url: 'https://acnhapi.com/v1/villagers/',\n      method: 'GET',\n      responseType: 'json',\n    }).then((response) => { \n\n      // get the data within the response that is needed\n      const data = response.data;\n\n      // create empty array\n      const newState = [];\n\n      // loop through data to obtain relevant information for each villager\n      for (let key in data) {\n        // get the necessary information from 'birthday-string' and 'birthday' in order to determine the villager's zodiac sign later\n        let zodiacMonth = (data[key]['birthday-string']).substring(0, 3);\n        let zodiacDay = parseInt(data[key]['birthday']);\n        // push the relevant info for each villager into an array\n        newState.push({\n          id: key,\n          name: data[key]['name']['name-USen'],\n          personality: data[key]['personality'],\n          birthday: data[key]['birthday-string'],\n          birthdayNumber: data[key]['birthday'],\n          catchphrase: data[key]['catch-phrase'],\n          icon: data[key]['icon_uri'],\n          image: data[key]['image_uri'],\n          species: data[key]['species'],\n          zodiacMonth: zodiacMonth,\n          zodiacDay: zodiacDay,\n          zodiacSign: '',\n        })\n      }\n\n      // determine to villager's zodiac sign based on the 'birthday' and 'birthday-string' provided by the API', have the results into another array\n      const zodiacState = newState.map((villager) => {\n        if ((villager.zodiacMonth == 'May' && villager.zodiacDay < 21) || (villager.zodiacMonth == 'Apr' && villager.zodiacDay > 19)) {\n          villager.zodiacSign = \"Taurus\"; return villager;\n        } else if ((villager.zodiacMonth == 'Jun' && villager.zodiacDay < 22) || (villager.zodiacMonth == 'May' && villager.zodiacDay > 20)) {\n          villager.zodiacSign = \"Gemini\"; return villager;\n        } else if ((villager.zodiacMonth == 'Jul' && villager.zodiacDay < 24) || (villager.zodiacMonth == 'Jun' && villager.zodiacDay > 21)) {\n          villager.zodiacSign = \"Cancer\"; return villager;\n        } else if ((villager.zodiacMonth == 'Aug' && villager.zodiacDay < 24) || (villager.zodiacMonth == 'Jul' && villager.zodiacDay > 23)) {\n          villager.zodiacSign = \"Leo\"; return villager;\n        } else if ((villager.zodiacMonth == 'Sep' && villager.zodiacDay < 23) || (villager.zodiacMonth == 'Aug' && villager.zodiacDay > 23)) {\n          villager.zodiacSign = \"Virgo\"; return villager;\n        } else if ((villager.zodiacMonth == 'Oct' && villager.zodiacDay < 23) || (villager.zodiacMonth == 'Sep' && villager.zodiacDay > 22)) {\n          villager.zodiacSign = \"Libra\"; return villager;\n        } else if ((villager.zodiacMonth == 'Nov' && villager.zodiacDay < 23) || (villager.zodiacMonth == 'Oct' && villager.zodiacDay > 22)) {\n          villager.zodiacSign = \"Scorpio\"; return villager;\n        } else if ((villager.zodiacMonth == 'Dec' && villager.zodiacDay < 21) || (villager.zodiacMonth == 'Nov' && villager.zodiacDay > 22)) {\n          villager.zodiacSign = \"Sagittarius\"; return villager;\n        } else if ((villager.zodiacMonth == 'Jan' && villager.zodiacDay < 21) || (villager.zodiacMonth == 'Dec' && villager.zodiacDay > 20)) {\n          villager.zodiacSign = \"Capricorn\"; return villager;\n        } else if ((villager.zodiacMonth == 'Feb' && villager.zodiacDay < 20) || (villager.zodiacMonth == 'Jan' && villager.zodiacDay > 20)) {\n          villager.zodiacSign = \"Aquarius\"; return villager;\n        } else if ((villager.zodiacMonth == 'Mar' && villager.zodiacDay < 21) || (villager.zodiacMonth == 'Feb' && villager.zodiacDay > 19)) {\n          villager.zodiacSign = \"Pisces\"; return villager;\n        } else {\n          villager.zodiacSign = \"Aries\"; return villager;\n        }\n      })\n\n      this.setState({\n        villagers: zodiacState\n      })\n    } \n  )}\n  \n  filterVillagers = (event, userSelection) => {\n    // prevent default performance of button\n    event.preventDefault();\n\n    // destructure the villagers array\n    const copyOfVillagers = [...this.state.villagers];\n\n    // determine how the villagers will be filtered (by zodiac sign, species, or personality) based on the user's selection \n    const relVillagers = copyOfVillagers.filter((villager) => villager.species === userSelection || villager.personality === userSelection || villager.zodiacSign === userSelection) \n    this.setState({\n      relVillagers: relVillagers\n    })\n    // if showing villagers based on a selected filter, do not show instructions\n    this.setState({\n      hideInfo: true\n    })\n    userSelection == '' ? this.setState({showInstructions: true}) : this.setState({showInstructions: false})\n  }\n\n  showInfo = (newEvent, id) => {\n    // prevent default performance of button\n    newEvent.preventDefault();\n\n    // if showing info for a specific villager, do not show all the filtered villagers\n    this.setState({\n      hideInfo: false\n    })\n\n    // destructure the filtered villagers array\n    const copyOfRelVillagers = [...this.state.relVillagers];\n\n    // show relevant info for one, specific villager\n    const clickedVillager = copyOfRelVillagers.filter((villager) => villager.id === id)\n    this.setState({\n      clickedVillager: clickedVillager\n    })\n  }\n\n  // bring the user back to the \"homepage\" with instructions\n  goBack = () => {\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <header id=\"refresh\">\n          <div className=\"wrapper\">\n            {/* logo that is also used as a 'go back' or refresh button to take the user back to the instructions */}\n            <a onClick={this.goBack} href=\"#refresh\"><img className=\"headerImage\" src={logo} alt='logo for Animal Crossing: New Horizons'></img></a>\n            <h1>The Villager Finder</h1>\n          </div>\n        </header>\n        <main>\n          <div className=\"wrapper\">\n            {/* captures the user selection that determines how the villagers will be filtered  */}\n            <Form filterVillagers={this.filterVillagers} />\n\n            {/* determines whether instructions are being shown */}\n            {this.state.showInstructions === true ? (<Instructions />) : (<p></p>)}\n\n            {/* determines whether info for a single villager is being shown */}\n            {this.state.hideInfo === true ? \n\n            // maps through arrays passes necessary props to the Relevant Villagers and Show Info components\n            (<ul className=\"relVillagerList\">{this.state.relVillagers.map(({ id, icon, name }) => {\n                return <RelevantVillagers showInfo={this.showInfo} id={id} icon={icon} name={name} />\n            })}</ul>) : \n            (this.state.clickedVillager.map(({ id, image, name, personality, birthday, catchphrase, species, zodiacSign }) => {\n              return <ul className=\"moreInfo\">\n                <ShowInfo id={id} icon={image} name={name} personality={personality} birthday={birthday} catchphrase={catchphrase} species={species} zodiacSign={zodiacSign} />\n              </ul>\n            })\n            )}\n          </div>\n        </main>\n        <footer>\n          <div className=\"wrapper\">\n            <p>Made with <span role=\"img\" aria-label=\"pink heart with yellow sparkles\">💖</span> by <a href=\"https://www.tabithapoeze.com/\">Tabitha Poeze</a> using the <a href=\"https://acnhapi.com/\">Animal Crossing: New Horizons API</a></p>\n          </div>\n        </footer>\n      </Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}