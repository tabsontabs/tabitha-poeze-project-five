{"version":3,"sources":["assets/villagers6.jpg","assets/isabelle.png","assets/logo.png","species.js","SpeciesList.js","Form.js","Instructions.js","RelevantVillagers.js","ShowInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","villagerSpecies","type","SpeciesList","disabled","value","map","species","index","key","Component","Form","handleChange","event","setState","userSelection","target","state","className","htmlFor","id","this","onChange","onClick","props","filterVillagers","Instructions","src","villagers","alt","isabelle","RelevantVillagers","showInfo","icon","name","ShowInfo","birthday","catchphrase","personality","App","preventDefault","relVillagers","filter","villager","hideInfo","showInstructions","newEvent","clickedVillager","axios","url","method","responseType","then","response","data","newState","push","image","logo","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a04e5c31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/villagers6.fcc2dd76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/isabelle.e81857d6.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.435f9ace.png\";","const villagerSpecies = [\n    { type: 'Alligator' },\n    { type: 'Anteater' },\n    { type: 'Bird' },\n    { type: 'Bear' },\n    { type: 'Cat' },\n    { type: 'Chicken' },\n    { type: 'Cow' },\n    { type: 'Cub' },\n    { type: 'Deer' },\n    { type: 'Dog' },\n    { type: 'Duck' },\n    { type: 'Eagle' },\n    { type: 'Elephant' },\n    { type: 'Frog' },\n    { type: 'Goat' },\n    { type: 'Hamster' },\n    { type: 'Hippo' },\n    { type: 'Horse' },\n    { type: 'Koala' },\n    { type: 'Kangaroo' },\n    { type: 'Lion' },\n    { type: 'Monkey' },\n    { type: 'Mouse' },\n    { type: 'Octopus' },\n    { type: 'Penguin' },\n    { type: 'Pig' },\n    { type: 'Rabbit' },\n    { type: 'Rhino' },\n    { type: 'Sheep' },\n    { type: 'Squirrel' },\n    { type: 'Tiger' },\n    { type: 'Wolf' }\n]\n\nexport default villagerSpecies;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport villagerSpecies from './species';\n\nclass SpeciesList extends Component {\n    render() {\n        return (\n            <Fragment>\n                <option disabled value=\"\">Make A Selection</option>\n                {   \n                    villagerSpecies.map((species, index) => {\n                        return (\n                            <option key={index} value={species.type}>{species.type}</option>\n                        )\n                    })\n                }\n            </Fragment>\n        );\n    }\n}\n\nexport default SpeciesList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport SpeciesList from './SpeciesList';\n\nclass Form extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userSelection: '',\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            userSelection: event.target.value,\n        })\n    }\n\n    render() {\n        return (\n            <form>\n                <div className=\"selectBox\">\n                    <label htmlFor=\"userSelectSpecies\" className=\"sr-only\">Select A Species</label>\n                    <select id=\"userSelectSpecies\" value={this.state.userSelection} onChange={this.handleChange}>\n                        <SpeciesList />\n                    </select>\n                </div>\n                <button className=\"display\" onClick={(event) => this.props.filterVillagers(event, this.state.userSelection)}>Display</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport villagers from './assets/villagers6.jpg';\nimport isabelle from './assets/isabelle.png';\n\nclass Instructions extends Component {\n\n    render() {\n        return (\n            <div className=\"instructions\">\n                <img className=\"mobileImage\" src={villagers} alt=\"A group of Animal Crossing:New Horizons villagers celebrating in front of a museum.\"></img>\n                <img className=\"desktopImage\" src={isabelle} alt=\"A group of Animal Crossing:New Horizons villagers celebrating in front of a museum.\"></img>\n                <div className=\"instructionsTextBox\">\n                    <h2>Instructions</h2>\n                    <p>Choose a villager species from the dropdown menu.</p>\n                    <p>Click the \"DISPLAY\" button to view names and icons for all associated villagers.</p>\n                    <p>You can click on a villager's icon to view their full photo and more information about them.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Instructions;","import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nclass RelevantVillagers extends Component {\n    render() {\n        return (\n            <Fragment>\n                <li className=\"relVillagerItem\">\n                    <ul>\n                        <li><button className=\"villagerButton\" key={this.props.id} onClick={(event) => this.props.showInfo(event, this.props.id)}>\n                            <img src={this.props.icon} alt={this.props.name}></img>\n                        </button></li>\n                        <li><p className=\"listItemName\">{this.props.name}</p></li>\n                    </ul>\n                </li>\n            </Fragment>\n        );\n    }   \n}\n\nexport default RelevantVillagers;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nclass ShowInfo extends Component {\n    render() {\n        return (\n            <Fragment key={this.props.id}>\n                <li><img src={this.props.icon} alt={this.props.name}></img></li>\n                <li>\n                    <ul className=\"showInfoTextBox\">\n                        <li><p className=\"villagerName\">{this.props.name}</p></li>\n                        <li><p className=\"villagerBday\">Birthday: {this.props.birthday}</p></li>\n                        <li><p>Catchphrase: \"{this.props.catchphrase}\"</p></li>\n                        <li><p>Personality: {this.props.personality}</p></li>  \n                    </ul>\n                </li>\n            </Fragment>\n        );\n    }\n}\n\n\nexport default ShowInfo;\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from './Form';\nimport Instructions from './Instructions';\nimport RelevantVillagers from './RelevantVillagers';\nimport ShowInfo from './ShowInfo';\nimport logo from './assets/logo.png';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      villagers: [],\n      relVillagers: [],\n      hideInfo: true,\n      clickedVillager: [],\n      showInstructions: true,\n    }\n  }\n\n  componentDidMount() {\n    axios({\n      url: 'https://acnhapi.com/v1/villagers/',\n      method: 'GET',\n      responseType: 'json',\n    }).then((response) => { \n\n      const data = response.data;\n\n      const newState = [];\n\n      for (let key in data) {\n        newState.push({\n          id: key,\n          name: data[key]['name']['name-USen'],\n          personality: data[key]['personality'],\n          birthday: data[key]['birthday-string'],\n          catchphrase: data[key]['catch-phrase'],\n          icon: data[key]['icon_uri'],\n          image: data[key]['image_uri'],\n          species: data[key]['species'],\n        })\n      }\n\n      this.setState({\n        villagers: newState\n      })\n    } \n  )}\n\n  filterVillagers = (event, userSelection) => {\n    event.preventDefault();\n    const copyOfVillagers = [...this.state.villagers];\n    const relVillagers = copyOfVillagers.filter((villager) => villager.species === userSelection)\n    this.setState({\n      relVillagers: relVillagers\n    })\n    this.setState({\n      hideInfo: true\n    })\n    this.setState({\n      showInstructions: false\n    })\n  }\n\n  showInfo = (newEvent, id) => {\n    newEvent.preventDefault();\n    this.setState({\n      hideInfo: false\n    })\n    const copyOfRelVillagers = [...this.state.relVillagers];\n    const clickedVillager = copyOfRelVillagers.filter((villager) => villager.id === id)\n    this.setState({\n      clickedVillager: clickedVillager\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <header>\n          <div className=\"wrapper\">\n            <img className=\"headerImage\" src={logo} alt='logo for Animal Crossing: New Horizons'></img>\n            <h1>The Villager Finder</h1>\n          </div>\n        </header>\n        <main>\n          <div className=\"wrapper\">\n            <Form filterVillagers={this.filterVillagers} />\n            {this.state.showInstructions === true ? (<Instructions />) : (<p></p>)}\n            {this.state.hideInfo === true ? \n            (<ul className=\"relVillagerList\">{this.state.relVillagers.map(({ id, icon, name }) => {\n                return <RelevantVillagers showInfo={this.showInfo} id={id} icon={icon} name={name} />\n            })}</ul>) : \n            (this.state.clickedVillager.map(({ id, image, name, personality, birthday, catchphrase }) => {\n              return <ul className=\"moreInfo\">\n                <ShowInfo id={id} icon={image} name={name} personality={personality} birthday={birthday} catchphrase={catchphrase} />\n              </ul>\n            })\n            )}\n          </div>\n        </main>\n        <footer>\n          <div className=\"wrapper\">\n            <p>Made with <span role=\"img\" aria-label=\"pink heart with yellow sparkles\">💖</span> by Tabitha Poeze</p>\n          </div>\n        </footer>\n      </Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}